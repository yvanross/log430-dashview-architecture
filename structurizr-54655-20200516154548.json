{"id":54655,"name":"FormuleETS DashView project","description":"Représentation des systèmes nécessaires à la calibration du véhicule.","revision":93,"lastModifiedDate":"2020-05-16T19:45:47Z","lastModifiedUser":"rossypro@rossypro","lastModifiedAgent":"structurizr-java/1.3.5","model":{"enterprise":{"name":"FormuleETS"},"people":[{"id":"3","tags":"Element,Person","name":"University Optimisation Engineer","description":"Un ingénieur spécialisé en course automobile qui analyse les données accumulé pour fournir les paramètres d'optimisation au véhicule de course.","relationships":[{"id":"9","tags":"Relationship,Synchronous","sourceId":"3","destinationId":"6","description":"Analyse les données d'historique et fournie des données d'optimisation du véhicule","interactionStyle":"Synchronous"}],"location":"Unspecified"},{"id":"1","tags":"Element,Person","name":"Pilot","description":"Le pilote contrôle le véhicule lors des essais sur piste et des compétitions. Il utilise l’application en mode pilote afin d’accéder aux données du véhicule ce qui permet d’avoir une meilleure compréhension des différents composants et d’améliorer sa conduite.","url":"http://www.clemex.com","relationships":[{"id":"7","tags":"Relationship,Synchronous","sourceId":"1","destinationId":"4","description":"Consulte l'état du véhicule durant la course","interactionStyle":"Synchronous"}],"location":"Unspecified"},{"id":"2","tags":"Element,Person","name":"Engineer","description":"L'ingénieur de piste gère les alarmes et capteurs du véhicule et ajuste/optimise les paramètres logiciels du véhicule","relationships":[{"id":"14","tags":"Relationship,Synchronous","sourceId":"2","destinationId":"12","description":"Uses","interactionStyle":"Synchronous"},{"id":"8","tags":"Relationship,Synchronous","sourceId":"2","destinationId":"5","description":"Optimise la configuration du véhicule","interactionStyle":"Synchronous"}],"location":"Unspecified"}],"softwareSystems":[{"id":"5","tags":"Element,Software System","name":"Racing System","description":"Système de calcul sur site permettant de récupérer les données temps réel et d'envoyer des commandes aux véhicule pour la calibration de celui-ci.","relationships":[{"id":"11","tags":"Relationship,Synchronous","sourceId":"5","destinationId":"6","description":"Fournie les données pour analyse et récupère les modèle d'optimisation","interactionStyle":"Synchronous"}],"location":"Unspecified","containers":[{"id":"13","tags":"Element,Container","name":"Racing system Server","description":"server that provide an API to record vehicule state and update...","relationships":[{"id":"17","tags":"Relationship,Synchronous,API","sourceId":"13","destinationId":"6","description":"OptimisationSysTemAPI","interactionStyle":"Synchronous"}],"technology":"Web server Golang"},{"id":"12","tags":"Element,Container","name":"Racing System User interface","description":"User interface to control....","relationships":[{"id":"15","tags":"Relationship,Synchronous,API","sourceId":"12","destinationId":"13","description":"RacingSystemAPI","interactionStyle":"Synchronous"}],"technology":"React"}]},{"id":"4","tags":"Element,Software System","name":"Vehicule System","description":"Système déployé dans les véhicules FormuleETS pour permettre la communication avec le Racing Server et le pilote.","relationships":[{"id":"10","tags":"Relationship,Synchronous","sourceId":"4","destinationId":"5","description":"Fournie les données temps réel","interactionStyle":"Synchronous"},{"id":"16","tags":"Relationship,Synchronous,API","sourceId":"4","destinationId":"13","description":"RacingSystemAPI","interactionStyle":"Synchronous"}],"location":"Unspecified"},{"id":"6","tags":"Element,Software System,REMOTE","name":"Optimisation Server","description":"Système distant permettant de récupérer les données d'un circuit et de faire l'analyse de ceux-ci pour fournire les paramètres du véhicule pour optimise le rendement de celui-ci durant la course.","location":"Unspecified"}]},"documentation":{"sections":[{"title":"Context","order":1,"format":"Markdown","content":"\nL'objectif de ce document d'architecture est principalement de démontrer aux étudiants comment créer et formater un document d'architecture logiciels.\n\nNous nous sommes basé sur le document de spécification suivant pour réaliser ce document.\nhttps://docs.google.com/document/d/14a59GwEGnIW3WzfuF_-8D4op0vDEPHjpkoNcHlEko0w/edit#heading=h.38czs75\n\nVoici une vue architecturale présentant tout les acteurs et systèmes impliqué dans le projet DashView [FormuleETS](https://formuleets.ca/).\n\nCet ensemble de système est utilisé pour faire l'acquisition de données, configurer et calibre les véhicules du club [FormuleETS](https://formuleets.ca/).\n\n\n![](embed:system_landscape_view)\n\n"},{"title":"Functional Overview","order":3,"format":"Markdown","content":"\n### Pilot\nLe pilote contrôle le véhicule lors des essais sur piste et des compétitions. Il utilise l’application en mode pilote afin d’accéder aux données du véhicule ce qui permet d’avoir une meilleure compréhension des différents composants et d’améliorer sa conduite.\n\n|Parent|Key|Category|Title|\n|--|--|--|--|\n|null|EF01|Général|Configuration de l’application avec un fichier XML|\n||||L’application doit utiliser un fichier de configuration, sous le format XML, pour déterminer les alarmes et capteurs disponibles. La liste des alarmes et des capteurs sont définis selon la table CAN fournie par la Formule ÉTS.|\n|null|EF03|Générale|Gérer les données reçues en temps réel|\n||||L’application doit constamment recevoir des données du bus CAN via Wi-Fi à partir du module Can2Ethernet et, en comparant avec la table des messages CAN, associer ces données aux capteurs et alarmes pour les afficher.|\n|null|EF05|Générale|Afficher des couleurs spécifiques pour la température des pneus|\n||||L’application doit afficher la température des trois capteurs de chaque pneu selon des couleurs spécifiques et avec des transitions fluides. Les capteurs sont situés à l’extérieur, au milieu et à l’intérieur de chacun des pneus. Lorsque la température est de 25°C et moins, la couleur est bleue. Entre 25°C et 65°C, la couleur passe de bleue à jaune. Entre 65°C et 95°C, l’indicateur passe de jaune à rouge. Finalement, en haut de 95°C, la couleur est rouge.|\n\n### Engineer\nL'ingénieur de piste gère les alarmes et capteurs du véhicule et ajuste/optimise les paramètres logiciels du véhicule\n\n|Parent|Key|Category|Title|\n|--|--|--|--|\n\n### University Optimisation Engineer\nUn ingénieur spécialisé en course automobile qui analyse les données accumulé pour fournir les paramètres d'optimisation au véhicule de course.\n\n|Parent|Key|Category|Title|\n|--|--|--|--|\n|null|EF16|Mode pilote|Mettre en veille l’application après 3 secondes sans données|\n||||doit se mettre en veille si une interruption de données survient et si elle dure plus de trois secondes.|\n\n### Vehicule System\nSystème déployé dans les véhicules FormuleETS pour permettre la communication avec le Racing Server et le pilote.\n\n|Parent|Key|Category|Title|\n|--|--|--|--|\n|null|EF15|Mode pilote|Affichage en mode paysage pour le mode pilote|\n||||doit afficher les interfaces en mode pilote sous le format paysage.|\n\n### Racing System\nSystème de calcul sur site permettant de récupérer les données temps réel et d'envoyer des commandes aux véhicule pour la calibration de celui-ci.\n\n|Parent|Key|Category|Title|\n|--|--|--|--|\n|null|EF15|Mode pilote|Affichage en mode paysage pour le mode pilote|\n||||doit afficher les interfaces en mode pilote sous le format paysage.|\n\n### Optimisation Server\nSystème distant permettant de récupérer les données d'un circuit et de faire l'analyse de ceux-ci pour fournire les paramètres du véhicule pour optimise le rendement de celui-ci durant la course.\n\n|Parent|Key|Category|Title|\n|--|--|--|--|\n|null|EF16|Mode pilote|Mettre en veille l’application après 3 secondes sans données|\n||||doit se mettre en veille si une interruption de données survient et si elle dure plus de trois secondes.|\n"},{"elementId":"4","title":"Quality Attributes","order":8,"format":"Markdown","content":"# Quality attributes related to the vehicule  \n   - list quality attributes"},{"elementId":"4","title":"My context view3","order":9,"format":"Markdown","content":" ![](#SystemContext)"},{"elementId":"6","title":"Quality Attributes","order":16,"format":"Markdown","content":"# Quality attributes related to the vehicule  \n   - list quality attributes"},{"elementId":"5","title":"Quality Attributes","order":12,"format":"Markdown","content":"# Quality attributes related to the vehicule  \n   - list quality attributes"},{"title":"Data","order":2,"format":"Markdown","content":"### Acteurs\n#### Pilot\nLe pilote contrôle le véhicule lors des essais sur piste et des compétitions. Il utilise l’application en mode pilote afin d’accéder aux données du véhicule ce qui permet d’avoir une meilleure compréhension des différents composants et d’améliorer sa conduite.\n#### Engineer\nL'ingénieur de piste gère les alarmes et capteurs du véhicule et ajuste/optimise les paramètres logiciels du véhicule\n#### University Optimisation Engineer\nUn ingénieur spécialisé en course automobile qui analyse les données accumulé pour fournir les paramètres d'optimisation au véhicule de course."},{"title":"Constraints","order":5,"format":"Markdown","content":"### CONT01 - configuration alarmes\nLes configurations pour les catégories des alarmes et des capteurs doivent être définies dans un fichier XML.\n\n### CONT02 - configuration interfaces\nLes configurations pour le mode par défaut et les couleurs de l’interface sont définies directement dans iOS.\n\n### CONT03 - can2Ethernet\nLa librairie Can2Ethernet développée par le club Formule ÉTS doit être utilisée.\n\n### CONT04 - Objective-C\nL’application doit être en Objective-C sous la plateforme iOS 7 et est destinée aux iPod Touch de 5e génération avec un écran de 4 \npouces.\n### CONT05 Wifi UDP\nLes données sont envoyées par Wi-Fi via le protocole UDP et le bus CAN.\n\n### CONT06 UDP port\nLe port UDP est le port par défaut soit 1337.\n\n### CONT07 id et offset des capteurs\nLes « id » et les « offset » des capteurs doivent suivre la table CAN fournie.\n\n### CONT08 Langue\nLes textes de l’application doivent être en anglais.\n\n### CONT09 Déploiement\nL’application doit être installée et exécutée sur un iPod Touch qui ne nécessite pas un « iOS jailbreaking » \n\n"},{"elementId":"4","title":"Context","order":6,"format":"Markdown","content":"# This is the context section for the vehicule architectural view\n## context diagram for the vehicule is not allowed\n### Can display title in context section\nfirst title is provided by structurizr\nsection and number are not working\n- section 1\n- section 2\n1. Numbered\n1. Numbered2\n\nThis is a new version of the vehicule context\n\n![](embed:VehiculeContextView)\n\n\n"},{"elementId":"4","title":"Functional Overview","order":7,"format":"Markdown","content":"# functional overview for the vehicule\nList use cases\n\n\n"},{"elementId":"5","title":"Context","order":10,"format":"Markdown","content":"\n![](embed:RacingSystemContextView)"},{"elementId":"6","title":"Context","order":14,"format":"Markdown","content":"# This is the context section\n![](embed:OptimisationSystemContextView)"},{"elementId":"6","title":"Functional Overview","order":15,"format":"Markdown","content":"# functional overview\nList use cases\n\n\n"},{"elementId":"5","title":"Functional Overview","order":11,"format":"Markdown","content":"# functional overview for the vehicule\nList use cases\n\n\n"},{"elementId":"5","title":"Task list","order":13,"format":"Markdown","content":"# Task list\nStatut possibles: Proposed, accepted, superseded, deprecated, rejected\n\n| id | status | titre | description | responsable|\n|----|--------|-------|-------------|------------|\n| 0  | proposed | documentation | Définir les status possible pour les tâches | all students |\n| 1  | proposed | documentation | Familiarisation avec la documentation d'architecture utilisant la méthode C4 et Structurizr | all students |\n| ceci est le résultat du travail effectué pour répondre à la tàche |\n| 2  | proposed | documentation | importer les exigence fonctionnel et de qualité dans le document d'architecture | Yvan |\n"},{"title":"Quality Attributes","order":4,"format":"Markdown","content":"\n### Usability - Understandability\n\n#### ENF01 - Utilisation du visuel de façon intuitive\nL’interface doit respecter le fonctionnement natif d’iOS lorsque les diverses actions sont effectuées dans le mode ingénieur de piste. Par exemple, l’ingénieur de piste doit entrer en mode édition pour supprimer ou déplacer une alarme ou un capteur.\n\n### Usability - Learnability\n\n#### ENF02 - Utilisation du mode pilote doit être très simple\nLes différentes interfaces du mode pilote doivent être simples, claires et précises. Lorsque la voiture est en piste, le pilote ne doit pas avoir à réfléchir pour comprendre et utiliser l’application. Les quatre interfaces disponibles doivent être toutes visibles en trois clics du bouton situé sur le volant puis continuer de cette façon en boucle.\n\n### Usability - Operability\n\n#### ENF03 - Démarrage simple et rapide dans le mode configuré\nLorsque le Dash Display démarre, il ne doit pas y avoir d’attente ou de commande à effectuer pour que l’application puisse être utilisée. Cette exigence est surtout importante pour le mode pilote qui ne peut pas utiliser l’écran tactile. De plus, le système doit utiliser le mode choisi dans les configurations de l’application directement dans iOS.\n\n### Usability - User-friendliness\n\n#### ENF04 - Haut contraste dans les couleurs de l’interface\nLes couleurs de l’interface doivent avoir de très haut contraste. De plus, deux versions de couleurs doivent être disponibles dans la configuration de l’application sur iOS : un mode foncé et un mode pâle.\n\n### Efficiency - Time behavior\n\n#### ENF05 - Rafraîchissement de l’écran à une cadence de 10 Hz\nLa fréquence de rafraîchissement des interfaces est de 10 Hz afin que les données affichées soient toujours à jour en temps réel. Avec cette cadence, le véhicule a le temps de transmettre les nouvelles données par Wi-Fi. Cette mesure signifie 10 fois par seconde donc le rafraîchissement est d’une fois à chaque 100 ms.\n\n### Efficiency - Resource behavior\n\n#### ENF06 - Période d’utilisation d’au maximum 25 minutes\nLes courses ont une durée d’au maximum 25 minutes donc l’application doit être optimisée pour une utilisation sans problème pour ce délai de temps.\n\n### Usability - Customizability\n\n#### ENF07 - Modification rapide des alarmes et des capteurs\nLa liste des alarmes et des capteurs peut facilement être modifiée en 5 minutes et moins. Cette modification est effectuée sur le fichier de configuration XML en fournissant le « id » et l’« offset » définis dans la table CAN. Cette exigence n’était pas précisée de la part du client, mais une précision concernant la table CAN qui peut être modifiée a été faite. Il est donc important que tout le logiciel soit facilement maintenable.\n\n### Reliability - Fault tolerance\n\n#### ENF08 - Aucun redémarrage de l’application en cas d’erreur\nLorsqu’une erreur survient, l’application ne doit pas redémarrer seule. Il faut la redémarrer manuellement à chaque fois.\n"},{"elementId":"6","title":"Task list","order":17,"format":"Markdown","content":"# Task list\nStatut possibles: Proposed, accepted, superseded, deprecated, rejected\n\n| id | status | titre | description | responsable|\n|----|--------|-------|-------------|------------|\n| 0  | proposed | documentation | Définir les status possible pour les tâches | all students |\n| 1  | proposed | documentation | Familiarisation avec la documentation d'architecture utilisant la méthode C4 et Structurizr | all students |\n| ceci est le résultat du travail effectué pour répondre à la tàche |\n| 2  | proposed | documentation | importer les exigence fonctionnel et de qualité dans le document d'architecture | Yvan |\n"}],"decisions":[{"elementId":"5","id":"1","date":"2020-05-16T15:45:46Z","title":"Choix de la plateforme de conception","status":"Proposed","content":"Utiliser Structurizr pour documenter l'architecture du système","format":"Markdown"}],"template":{"name":"Software Guidebook","author":"Simon Brown","url":"https://leanpub.com/visualising-software-architecture"}},"views":{"systemLandscapeViews":[{"description":"Integration de tout les systèmes pour le projet FormuleETS DashView","key":"system_landscape_view","paperSize":"A4_Landscape","automaticLayout":{"rankDirection":"TopBottom","rankSeparation":300,"nodeSeparation":600,"edgeSeparation":200,"vertices":false},"enterpriseBoundaryVisible":true,"relationships":[{"id":"11"},{"id":"7"},{"id":"8"},{"id":"10"},{"id":"9"}],"elements":[{"id":"1","x":0,"y":0},{"id":"2","x":0,"y":0},{"id":"3","x":0,"y":0},{"id":"4","x":0,"y":0},{"id":"5","x":0,"y":0},{"id":"6","x":0,"y":0}]}],"systemContextViews":[{"softwareSystemId":"5","description":"Diagramme d'architecture du système Racing.","key":"RacingSystemContextView","paperSize":"A5_Landscape","automaticLayout":{"rankDirection":"TopBottom","rankSeparation":300,"nodeSeparation":600,"edgeSeparation":200,"vertices":false},"enterpriseBoundaryVisible":true,"relationships":[{"id":"11"},{"id":"8"},{"id":"10"}],"elements":[{"id":"2","x":0,"y":0},{"id":"4","x":0,"y":0},{"id":"5","x":0,"y":0},{"id":"6","x":0,"y":0}]},{"softwareSystemId":"6","description":"Système permettant l'optimisation des paramètres du véhicule à partir des données temps réel et calculés.","key":"OptimisationSystemContextView","paperSize":"A5_Landscape","automaticLayout":{"rankDirection":"TopBottom","rankSeparation":300,"nodeSeparation":600,"edgeSeparation":200,"vertices":false},"enterpriseBoundaryVisible":true,"relationships":[{"id":"11"},{"id":"9"}],"elements":[{"id":"3","x":0,"y":0},{"id":"5","x":0,"y":0},{"id":"6","x":0,"y":0}]},{"softwareSystemId":"4","description":"Diagramme d'architecture du système dans le véhicule FormuleETS.","key":"VehiculeContextView","paperSize":"A5_Landscape","automaticLayout":{"rankDirection":"TopBottom","rankSeparation":300,"nodeSeparation":600,"edgeSeparation":200,"vertices":false},"enterpriseBoundaryVisible":true,"relationships":[{"id":"7"},{"id":"10"}],"elements":[{"id":"1","x":0,"y":0},{"id":"4","x":0,"y":0},{"id":"5","x":0,"y":0}]}],"configuration":{"branding":{},"styles":{"elements":[{"tag":"Software System","background":"#1168bd","color":"#ffffff"},{"tag":"Person","background":"#08427b","color":"#ffffff","shape":"Person"}],"relationships":[{"tag":"API","color":"#ff0000"}]},"terminology":{}}}}